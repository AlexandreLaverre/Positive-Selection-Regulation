sp = config["sp"]
sample = config["sample"]
TFs = config["TFs"][sample]
cluster = config["cluster"]

path = config[cluster]["path"]
pathResults = path + "/results/positive_selection/" + sp + "/" + sample
pathScripts = path + "/scripts/detect_positive_selection"
pathPeaks = path + "/results/peaks_calling/" + sp + "/" + sample


rule ConsensusSummits:
    message: "Get consensus summits"
    input: BED_file = pathPeaks + "/{TF}.peaks.bed"
    output: peaks = expand(pathPeaks + "/consensus/${TF}/${TF}.consensus_summits.bed", TF=TFs)
    log: out = pathResults + "/log/ConsensusSummits.out"
    shell:
        """
        {pathScripts}/ChIPseq_analyses/get.consensus.summits.sh {sp} {sample} {cluster} &> {log.out}
        """

rule ChromosomeCorrespondence:
    message: "Get correspondence for chromosomes names between different assemblies"
    input: ok
    output: ok
    log: out = pathResults + "/log/ConsensusSummits.out"
    shell:
        """
        {pathScripts}/utils/compare_genome_assemblies/chromosome.correspondence.sh {sp} {Assembly1} {Assembly2} {suffix} {cluster} &> {log.out}
        """


rule ConvertCoordinates:
    message: "Convert coordinates to UCSC for human and mice"
    input: BED_file = pathPeaks + "/{TF}.peaks.bed"
    output: peaks = expand(pathPeaks + "/consensus/${TF}/${TF}.consensus_summits.bed", TF=TFs)
    log: out = pathResults + "/log/ConsensusSummits.out"
    shell:
        """
        python {pathScripts}/utils/convert.BED.chrNames.py {sp} {sample} {cluster} &> {log.out}
        """

rule runHALPER:
    message: "Get consensus summits"
    input: BED_file = pathPeaks + "/{TF}.peaks.bed"
    output: peaks = expand(pathPeaks + "/consensus/${TF}/${TF}.consensus_summits.bed", TF=TFs)
    log: out = pathResults + "/log/ConsensusSummits.out"
    shell:
        """
        {pathScripts}/get.consensus.summits.sh {sp} {sample} {cluster} &> {log.out}
        """